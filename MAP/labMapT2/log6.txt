ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[3 -> 1=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack: empty
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack: empty
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack: empty
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v1]
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v2;(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v2]
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(Ref(int) v3;(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[Ref(int) v3]
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v1, 2);(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[newH(v1, 2)]
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (0 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v2, 3);(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[newH(v2, 3)]
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (0 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(newH(v3, 4);(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[newH(v3, 4)]
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (0 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(new Barrier(cnt,rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[new Barrier(cnt,rH(v2))]
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))))]
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))))]
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);print(rH(v3)))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[(await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v1, rH(v1)*10);print(rH(v1)))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[await(cnt)]
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v3))]
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v1, rH(v1)*10)]
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
FileTable:
Heap:
[1 -> 2]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=1
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v1))]
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 
FileTable:
Heap:
[1 -> 20]
[2 -> 3]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=2
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[(wH(v2, rH(v2)*10);print(rH(v2)))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[wH(v2, rH(v2)*10)]
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 30]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack:
[print(rH(v2))]
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

ExeStack: empty
id=3
SymbTable:
[cnt -> 1]
[v1 -> (1 int)]
[v2 -> (2 int)]
[v3 -> (3 int)]
Out:
4 20 300 
FileTable:
Heap:
[1 -> 20]
[2 -> 300]
[3 -> 4]
Barrier:
[1 -> 3=[2, 1, 3]]

